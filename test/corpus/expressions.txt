================================================================================
Subscript expressions
================================================================================

a(1)
b(2, 3)
c(4, end)

--------------------------------------------------------------------------------

(module
  (expression_statement
    (subscript
      (identifier)
      (integer)))
  (expression_statement
    (subscript
      (identifier)
      (integer)
      (integer)))
  (expression_statement
    (subscript
      (identifier)
      (integer)
      (_end_subscript))))

================================================================================
Subscript slice expressions
================================================================================

a(:)
b(5:end)
b([5:6, 7])
c([5:6, 7], 2)

--------------------------------------------------------------------------------

(module
  (expression_statement
    (subscript
      (identifier)
      (slice)))
  (expression_statement
    (subscript
      (identifier)
      (slice
        (integer)
        (_end_subscript))))
  (expression_statement
    (subscript
      (identifier)
      (matrix
          (slice
            (integer)
            (integer))
          (integer))))
  (expression_statement
    (subscript
      (identifier)
      (matrix
          (slice
            (integer)
            (integer))
          (integer))
      (integer)))

================================================================================
Call expressions
================================================================================

b(1)
c(e, f)

--------------------------------------------------------------------------------

  (expression_statement
    (call
      (identifier)
      (argument_list
        (integer))))
  (expression_statement
    (call
      (identifier)
      (argument_list
        (identifier)
        (identifier))))

================================================================================
Math operators
================================================================================

a + b * c ^ d - e / 5
-5
+x
~x
x'

--------------------------------------------------------------------------------

(module
  (expression_statement
    (binary_operator
      (binary_operator
        (identifier)
        (binary_operator
          (identifier)
          (binary_operator
            (identifier)
            (identifier))))
      (binary_operator
        (identifier)
        (integer))))
  (expression_statement
    (unary_operator
      (integer)))
  (expression_statement
    (unary_operator
      (identifier)))
  (expression_statement
    (unary_operator
      (identifier)))
  (expression_statement
    (transpose_operator
      (identifier))))

================================================================================
Binary Addition / Subtraction With Floats
================================================================================

.1-.0
.1+.0
.1-0
.1+0

1-.0
1+.0

--------------------------------------------------------------------------------

(module
  (expression_statement
    (binary_operator
      (float)
      (float)))
  (expression_statement
    (binary_operator
      (float)
      (float)))
  (expression_statement
    (binary_operator
      (float)
      (integer)))
  (expression_statement
    (binary_operator
      (float)
      (integer)))
  (expression_statement
    (binary_operator
      (integer)
      (float)))
  (expression_statement
    (binary_operator
      (integer)
      (float))))

================================================================================
Power Operator Precedence
================================================================================

2^2^3
-2^2

--------------------------------------------------------------------------------

(module
  (expression_statement
    (binary_operator
      (integer)
      (binary_operator
        (integer)
        (integer))))
  (expression_statement
    (unary_operator
      (binary_operator
        (integer)
        (integer)))))

================================================================================
Operator precedence
================================================================================

a() + b(c)

--------------------------------------------------------------------------------

(module
  (expression_statement
    (binary_operator
      left: (call
        function: (identifier)
        arguments: (argument_list))
      right: (subscript
          value: (identifier)
          subscript: (identifier))))

================================================================================
Bitwise operators
================================================================================

a + b | c + d & e

--------------------------------------------------------------------------------

(module
  (expression_statement
    (boolean_operator
      (binary_operator
        (identifier)
        (identifier))
      (boolean_operator
        (binary_operator
          (identifier)
          (identifier))
        (identifier)))))

================================================================================
Boolean operators
================================================================================

a | b & c
~ d
~ a & b | c
a & ~ b & c

--------------------------------------------------------------------------------

(module
  (expression_statement
    (boolean_operator
      (identifier)
      (boolean_operator
        (identifier)
        (identifier))))
  (expression_statement
    (unary_operator
      (identifier)))
  (expression_statement
    (boolean_operator
      (boolean_operator
        (unary_operator
          (identifier))
        (identifier))
      (identifier)))
  (expression_statement
    (boolean_operator
      (boolean_operator
        (identifier)
        (unary_operator
          (identifier)))
      (identifier))))

================================================================================
Comparison operators
================================================================================

a < b <= c == d >= e > f
~ a == b | c == d

--------------------------------------------------------------------------------

(module
  (expression_statement
    (comparison_operator
      (identifier)
      (identifier)
      (identifier)
      (identifier)
      (identifier)
      (identifier)))
  (expression_statement
    (boolean_operator
        (comparison_operator
            (unary_operator (identifier))
            (identifier))
        (comparison_operator
            (identifier)
            (identifier)))))

================================================================================
Assignments
================================================================================

a = 1
a(b) = c

--------------------------------------------------------------------------------

(module
  (expression_statement
    (assignment
      (identifier)
      (integer)))
  (expression_statement
    (assignment
      (subscript
        (identifier)
        (identifier))
      (identifier))))

===========================================
Arbitrary indentation between brackets
==========================================

function a()
    b(
1,
2
    )
    
    c = [
3
    ]

---

(module
  (function_definition
    (identifier)
    (parameters)
    (block
      (expression_statement
        (call
          (identifier)
          (argument_list
            (integer)
            (integer))))
      (expression_statement
        (assignment
          (identifier)
          (matrix
            (integer)))))))